---

- assert:
    that:
      - user is mapping
      - user.name is defined

- name: Set up bashrc.d support (folder) for {{ user.name }}
  become: yes
  file:
    path:  "{{ user.home | d('/home/' + user.name) }}/.bashrc.d"
    mode:  "0755"
    owner: "{{ user.name }}"
    group: "{{ user.group | d(user.name) | d(omit) }}"
    state: directory

- name: set up bashrc.d support (inclusion) for {{ user.name }}
  become: yes
  blockinfile:
    backup:      yes
    block:       |
      if [[ $- != *i* ]] ; then
        return
      fi

      # Load all files from .shell/bashrc.d directory
      if [ -d $HOME/.bashrc.d ]; then
        for file in `ls $HOME/.bashrc.d`; do
          source $file
        done
      fi
    create:      yes
    dest:        "{{ user.home | d('/home/' + user.name) }}/.bashrc"
    follow:      yes
    owner:       "{{ user.name }}"
    group:       "{{ user.group | d(user.name) | d(omit) }}"
    marker:      "# ANSIBLE MANAGED: .bashrc.d {mark}"
    state:       present

...