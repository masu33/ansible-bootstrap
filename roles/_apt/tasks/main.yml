---

- assert:
    that:
      - "( debconfs is defined
        or repos    is defined
        or packages is defined
        or ( autoremove | d(false) )
        or ( upgrade    | d(false) )
         )"
    msg:
      - "debconfs, repos or packages should be defined or any of autoremove or upgrade should be true"

- assert:
    that:
      - "( debconfs is undefined
        or debconfs is sequence
         )"
    msg:
      - "debconfs should be undefined or sequence"

- assert:
    that:
      - "( repos is undefined
        or repos is sequence
         )"
    msg:
      - "packages should be undefined or sequence"

- assert:
    that:
      - "( packages is undefined
        or packages is sequence
         )"
    msg:
      - "packages should be undefined or sequence"

- assert:
    that:
      - "( upgrade is undefined
        or upgrade is sameas false
        or upgrade is sameas true
         )"
    msg:
      - "upgrade should be undefined or boolean"

- assert:
    that:
      - "( autoremove is undefined
        or autoremove is sameas false
        or autoremove is sameas true
         )"
    msg:
      - "autoremove should be undefined or boolean"

- name: "Set debconfs"
  become: yes
  debconf:
    name:     "{{ __debconf.name     }}"
    question: "{{ __debconf.question }}"
    vtype:    "{{ __debconf.vtype    }}"
    value:    "{{ __debconf.value    }}"
  with_items: "{{ debconfs
                | d([])
                | forall(default_key=default_forall_key_4_debconfs)
                | list
               }}"
  loop_control:
    loop_var: "__debconf"

- name: "Set repository keys with keyserver"
  become: yes
  apt_key:
    state:     "{{ __repo.state | d('present') }}"
    keyserver: "{{ __repo.keyserver            }}"
    id:        "{{ __repo.key                  }}"
  with_items: "{{ repos
                | d([])
                | forall(default_key=default_forall_key_4_repos)
                | selectattr('key', 'defined')
                | list
               }}"
  loop_control:
    loop_var: "__repo"

- name: "Set repository keys with GPG keys"
  become: yes
  apt_key:
    state: "{{ __repo.state   | d('present') }}"
    url:   "{{ __repo.key_url                }}"
  with_items: "{{ repos
                | d([])
                | forall(default_key=default_forall_key_4_repos)
                | selectattr('key_url', 'defined')
                | list
               }}"
  loop_control:
    loop_var: "__repo"

- name: "Set repositories"
  become: yes
  apt_repository:
    mode: 644
    repo:  "{{ __repo.repo            }}"
    state: "{{ __repo.state | d(omit) }}"
    update_cache: no
  with_items: "{{ repos
                | d([])
                | forall(default_key=default_forall_key_4_repos)
                | list
               }}"
  loop_control:
    loop_var: "__repo"

- name: "Update cache"
  when: "{{ repos is defined }}"
  become: yes
  apt:
    update_cache: yes
  ignore_errors: yes

- name: "Packages..."
  become: yes
  apt:
    allow_unauthenticated: "{{ __package.allow_unauthenticated | d(omit) }}"
    cache_valid_time:      "{{ __package.cache_valid_time      | d(omit) }}"
    deb:                   "{{ __package.deb                   | d(omit) }}"
    default_release:       "{{ __package.default_release       | d(omit) }}"
    dpkg_options:          "{{ __package.dpkg_options          | d(omit) }}"
    force:                 "{{ __package.force                 | d(omit) }}"
    install_recommends:    "{{ __package.install_recommends    | d(omit) }}"
    name:                  "{{ __package.name                  | d(omit) }}"
    purge:                 "{{ __package.purge                 | d(omit) }}"
    state:                 "{{ __package.state                 | d(omit) }}"
  with_items: "{{ packages
                | d([])
                | forall(default_key=default_forall_key_4_packages)
                | list
               }}"
  loop_control:
    loop_var: "__package"

- name: "Upgrade and/or autoremove"
  when: "( (upgrade    | d(false))
        or (autoremove | d(false))
         )"
  become: yes
  apt:
    upgrade:    "{{ upgrade    | d(omit) }}"
    autoremove: "{{ autoremove | d(omit) }}"
