---

- name: "USERS: Download resources"
  when: "{{ online_resources is defined }}"
  become: yes
  become_user: "{{ user.name }}"
  include: __download.yml
  vars:
    details: "{{ item_per_user }}"
  with_items: "{{ online_resources | d([]) |
                  filter_by_user(user.name) |
                  list }}"
  loop_control:
    loop_var: "item_per_user"

- name: "USERS: Install frameworks with ubuntu-make"
  become_user: "{{ user.name }}"
  umake:
    group: "{{ framework.group | d(omit) }}"
    component: "{{ framework.component | d(omit) }}"
    path: "{{ framework.path | d(omit) }}"
    state: "{{ framework.state | d(omit) }}"
  with_flattened: "{{ desktop_settings |
                      selectattr('umake_frameworks', 'defined') |
                      filter_by_user( user.name ) |
                      map(attribute='umake_frameworks') |
                      d([]) |
                      list }}"
  loop_control:
    loop_var: "framework"

- name: "USERS: Set up filesystem resources"
  when: "{{ filesystem_resources is defined }}"
  become: yes
  become_user: "{{ user.name }}"
  include: __filesystem.yml
  vars:
    details: "{{ item_per_user }}"
  with_items: "{{ filesystem_resources |
                  filter_by_user(user.name) |
                  list }}"
  loop_control:
    loop_var: "item_per_user"

- name: "USERS: Set visual settings"
  when: "{{ desktop_settings is defined }}"
  # become_user:  # this is intentionally commented out
  include: gnome.yml
  vars:
    username: "{{ user.name }}"
    settings: "{{ item_per_user }}"
  with_items: "{{ desktop_settings |
                  filter_by_user(user.name) |
                  list }}"
  loop_control:
    loop_var: "item_per_user"

- name: "USERS: Set up bashrc.d support (folder)"
  become: yes
  become_user: "{{ user.name }}"
  file:
    path: "{{ user.name | user_home }}/.bashrc.d"
    mode: "0755"
    owner: "{{ user.name }}"
    state: directory

- name: "USERS: Set up bashrc.d support (inclusion)"
  become: yes
  become_user: "{{ user.name }}"
  blockinfile:
    backup: yes
    block: "{{ lookup('file', 'bashrc.append.sh') }}"
    create: yes
    dest: "{{ user.name | user_home }}/.bashrc"
    follow: yes
    insertafter: EOF
    owner: "{{ user.name }}"
    marker: "# ANSIBLE MANAGED: .bashrc.d {mark}"
    state: present

- name: "USERS: Set up env"
  become: yes
  become_user: "{{ user.name }}"
  lineinfile:
    create: yes
    dest: "{{ user.name | user_home }}/.bashrc"
    line: "{{ env | env_create }}"
    state: "{{ env.state | d('present') }}"
  with_flattened: "{{ desktop_settings |
                      selectattr('env', 'defined') |
                      selectattr('users', 'defined') |
                      map(attribute='env') |
                      d([]) |
                      list }}"
  loop_control:
    loop_var: "env"
