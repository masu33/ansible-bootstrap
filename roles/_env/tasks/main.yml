---

- name: "Handle empty list"
  when: "{{ settings is undefined }}"
  set_fact:
    settings: "{{ [] }}"

- name: "Global envs"
  become: yes
  lineinfile:
    backup: yes
    create: yes
    dest:   "{{ __env.profile | d(False) | ternary('/etc/profile.d/ansible-managed', '/etc/environment') }}"
    state:  "{{ __env.state   | d('present') }}"
    owner:  "{{ __env.user                    | d(root_user) | d('root') }}"
    group:  "{{ __env.group   | d(__env.user) | d(root_user) | d('root') }}"
    line:   "{{ __env.line    | d(omit) }}"
    regexp: "{{ __env.regex   | d(omit) }}"
    mode: "0644"
  with_items: "{{ settings | forall |
                  rejectattr('user', 'defined') |
                  list }}"
  loop_control:
    loop_var: "__env"

- name: "User envs"
  become: yes
  lineinfile:
    backup: yes
    create: yes
    dest:   "{{ __env.user    | user_home }}/{{ __env.profile | d(False) | ternary('.bashrc', '.bash_profile') }}"
    state:  "{{ __env.state   | d('present') }}"
    owner:  "{{ __env.user                    | d(root_user) | d('root') }}"
    group:  "{{ __env.group   | d(__env.user) | d(root_user) | d('root') }}"
    line:   "{{ __env.line    | d(omit) }}"
    regexp: "{{ __env.regex   | d(omit) }}"
    mode: "0644"
  with_items: "{{ settings | forall |
                  selectattr('user', 'defined') |
                  list }}"
  loop_control:
    loop_var: "__env"
