---

- assert:
    that:
      - "( ( settings is defined )
       and ( settings is sequence )
         )"
    msg: "settings should be defined and sequence"

- assert:
    that:
      - "{{ settings
          | forall
          | selectattr('user', 'defined')
          | rejectattr('user', 'user_exists')
          | list
          == []
         }}"
    msg: "the user key should be undefined or an existing user"

- assert:
    that:
      - "{{ settings
          | forall
          | selectattr('file', 'undefined')
          | list
          == []
         }}"
    msg: "{{ 'The file key should be defined for all elements.'
           + ' Possible keys without user: '
           + ', '.join(global_assignment_envs + global_script_envs)
           + '.'
           + ' Possible keys with user: '
           + ', '.join(user_assignment_envs + user_script_envs)
           + '.'
          }}"

- assert:
    that:
      - "{{ settings
          | forall
          | selectattr('line', 'undefined')
          | list
          == []
         }}"
    msg: "The line key should be defined for all elements."

- assert:
    that:
      - "{{ settings
          | forall
          | selectattr('user', 'undefined')
          | map(attribute='file')
          | reject('in', global_assignment_envs + global_script_envs)
          | list
          == []
         }}"
    msg: "{{ 'The file key should be defined for all elements:'
           + ', '.join( settings
                      | forall
                      | selectattr('user', 'undefined')
                      | map(attribute='file')
                      | reject('in', global_assignment_envs + global_script_envs)
                      | list
                      )
           + '.'
           + ' Possible keys without user: '
           + ', '.join(global_assignment_envs + global_script_envs)
           + '.'
           + ' Possible keys with user: '
           + ', '.join(user_assignment_envs + user_script_envs)
           + '.'
          }}"

- assert:
    that:
      - "{{ settings
          | forall
          | selectattr('user', 'defined')
          | map(attribute='file')
          | reject('in', user_assignment_envs + user_script_envs)
          | list
          == []
         }}"
    msg: "{{ 'The file key should be defined for all elements:'
           + ', '.join( settings
                      | forall
                      | selectattr('user', 'defined')
                      | map(attribute='file')
                      | reject('in', user_assignment_envs + user_script_envs)
                      | list
                      )
           + '.'
           + ' Possible keys without user: '
           + ', '.join(global_assignment_envs + global_script_envs)
           + '.'
           + ' Possible keys with user: '
           + ', '.join(user_assignment_envs + user_script_envs)
           + '.'
          }}"

- name: "Set env settings"
  become: yes
  lineinfile:
    backup: yes
    create: yes
    dest:   "{% if __env.user is defined %}{{ __env.user | user_home }}/{% endif %}{{ __env.file }}"
    state:  "{{ __env.state   | d('present') }}"
    owner:  "{{ __env.user                    | d(root_user) | d('root') }}"
    group:  "{{ __env.group   | d(__env.user) | d(root_user) | d('root') }}"
    line:   "{{ __env.line    | d(omit) }}"
    regexp: "{%
               if __env.regexp is defined
             %}{{ __env.regexp }}{%
               elif '=' in __env.line
             %}{%
                 if __env.file in (global_assignment_envs + user_assignment_envs)
               %}{{ __env.line | regex_replace('^(.* )?([^\\s]*=).*$', '^(.* )?\\2.*$') }}{%
                 else
               %}{{ __env.line | regex_replace('^(.*=).*$', '^\\1.*$') }}{%
                 endif
             %}{%
               else
             %}{{ omit }}{%
               endif
             %}"
    mode:   "0644"
  with_items: "{{ settings
                | forall
                | list
               }}"
  loop_control:
    loop_var: "__env"
